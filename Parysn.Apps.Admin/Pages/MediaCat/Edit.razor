@page "/mediacat/edit/{Id}"
@using Parsyn.Apps.Company.Data.Models.Entity.Config
@inject IUIHelper _helper
<PageTitle>بیزبان | ویرایش دسته بندی چند رسانه </PageTitle>
<MudContainer>
	<MudCard>
		<MudCardContent>

			<MudCardHeader Style="@($"background-color:{Colors.Gray.Lighten4}")" dir="rtl" Dense Elevation="1">
				<MudText>وایرایش دسته بندی چند رسانه </MudText>
				<MudSpacer />

			</MudCardHeader>
			<MudContainer Class="mt-3">
				<MudForm dir="rtl">
					<MudGrid>

						<MudItem xs="12" lg="12">
							<MudTextField InputType="InputType.Text" Variant="Variant.Outlined" Margin="Margin.Dense" @bind-Value="Model.Title" Class="mud-rtl" T="string" Label="عنوان"></MudTextField>
						</MudItem>

					</MudGrid>
				</MudForm>
			</MudContainer>

		</MudCardContent>
		<MudCardActions>
			<MudButton Disabled="@_saving" @onclick="Update" Variant="Variant.Outlined" Color="Color.Primary" Size="Size.Small">
				@if (_saving)
				{
					<MudProgressCircular Size="Size.Small" Color="@Color.Primary" Indeterminate="true" />
				}
				else
				{
					<MudText>ذخیره</MudText>
				}
			</MudButton>

		</MudCardActions>
	</MudCard>
</MudContainer>

@code {
	[Parameter]
	public object Id { get; set; }
	private bool _saving { get; set; } = false;
	private MediaCatModel Model = new MediaCatModel();
	HttpClient _hc;
	HttpClientHelper<MediaCatModel> hch;

	protected override async Task OnInitializedAsync()
	{
		hch = new HttpClientHelper<MediaCatModel>(_helper.ApiUrl());
		hch.SetToken(await USR.GetToken());
		_hc = hch.Instance();
		GetItem();
		await base.OnInitializedAsync();
	}
	private async void GetItem()
	{

		var data = await hch.Post(Id, $"MediaCat/GetById?Id={Id}");
		if (data.Status == ResponseObjectStatusEnum.Error || data.Status == ResponseObjectStatusEnum.UnhandeledException)
		{
			return;
		}
		_snackbar.Add(data.Msg, (data.Status == ResponseObjectStatusEnum.Error || data.Status == ResponseObjectStatusEnum.UnhandeledException) ? Severity.Error : Severity.Success);

		Model = JsonConvert.DeserializeObject<MediaCatModel>(data.Data.ToString());
		Model.Id = int.Parse(Id.ToString());
		StateHasChanged();
		Console.WriteLine(data.Msg);
	}
	private async void Update()
	{
		_saving = true;
		hch.SetToken(await USR.GetToken());
		var data = await hch.Post(Model, $"MediaCat/Edit");
		_snackbar.Add(data.Msg, (data.Status == ResponseObjectStatusEnum.Error || data.Status == ResponseObjectStatusEnum.UnhandeledException) ? Severity.Error : Severity.Success);
		_saving = false;
		StateHasChanged();
		Thread.Sleep(1700);
		_nv.NavigateTo("mediacat");
	}
}
